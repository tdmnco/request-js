{"version":3,"sources":["query-string.js","request.js","index.js"],"names":["queryString","url","data","slice","type","query","key","hasOwnProperty","push","encodeURIComponent","join","Request","constructor","delete","get","post","put","_request","method","JSON","stringify","xhr","XMLHttpRequest","open","send","Promise","resolve","reject","onreadystatechange","readyState","status","payload","responseText"],"mappings":"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","file":"request.js","sourceRoot":"../src/js","sourcesContent":["// Exports:\nexport function queryString(url, data) {\n  if (url.slice(-1) !== '/') {\n    url = url + '/'\n  }\n\n  const type = typeof data\n\n  if (type === 'number' || type === 'string') {\n    return url + data\n  }\n\n  const query = [url]\n  \n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    }\n  }\n  \n  return query.join('&')\n}","// Imports:\nimport { queryString } from './'\n\n// Classes:\nclass Request {\n  \n  // Constructor:\n  constructor(data) {\n    this.data = data.data\n    this.url = data.url\n  }\n\n  // Static functions:\n  static delete(url, data) {\n    return this._request('DELETE', url, data)\n  }\n\n  static get(url, data) {\n    return this._request('GET', url, data)\n  }\n\n  static post(url, data) {\n    return this._request('POST', url, data)\n  }\n\n  static put(url, data) {\n    return this._request('PUT', url, data)\n  }\n\n  // Static private functions:\n  static _request(method, url, data) {\n    if (method === 'GET') {\n      url = queryString(url, data)\n    } else if (method === 'POST') {\n      data = JSON.stringify(data)\n    }\n\n    const xhr = new XMLHttpRequest()\n\n    xhr.open(method, url)\n\n    xhr.send(data)\n\n    return new Promise((resolve, reject) => {\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          const status = xhr.status\n          \n          if (status >= 100 && status < 400) {\n            resolve({ payload: xhr.responseText, status })\n          }\n          \n          if (status >= 400 && status < 600) {\n            reject({ payload: xhr.responseText, status: status })\n          }\n        }\n      }\n    })\n  } \n\n  // Functions:\n  delete() {\n    return this.constructor.delete(this.url, this.data)\n  }\n  \n  get() {\n    return this.constructor.get(this.url, this.data)\n  }\n\n  post() {\n    return this.constructor.post(this.url, this.data)\n  }\n\n  put() {\n    return this.constructor.put(this.url, this.data)\n  }\n  \n}\n\n// Exports:\nexport { Request }","// Exports:\nexport { queryString } from './query-string'\nexport { Request } from './request'"]}