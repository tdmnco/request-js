{"version":3,"sources":["request.js","index.js"],"names":["Request","data","url","constructor","delete","get","patch","post","put","_request","method","xhr","XMLHttpRequest","open","send","Promise","resolve","reject","onreadystatechange","readyState","status","payload","responseText"],"mappings":";AA8EA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA7EMA,IAAAA,EA6EN,WA1EcC,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACXA,KAAAA,KAAOA,EAAKA,KACZC,KAAAA,IAAMD,EAAKC,IAwEpB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAtBW,MAAA,WACA,OAAA,KAAKC,YAAYC,OAAO,KAAKF,IAAK,KAAKD,QAqBlD,CAAA,IAAA,MAlBQ,MAAA,WACG,OAAA,KAAKE,YAAYE,IAAI,KAAKH,IAAK,KAAKD,QAiB/C,CAAA,IAAA,QAdU,MAAA,WACC,OAAA,KAAKE,YAAYG,MAAM,KAAKJ,IAAK,KAAKD,QAajD,CAAA,IAAA,OAVS,MAAA,WACE,OAAA,KAAKE,YAAYI,KAAK,KAAKL,IAAK,KAAKD,QAShD,CAAA,IAAA,MANQ,MAAA,WACG,OAAA,KAAKE,YAAYK,IAAI,KAAKN,IAAK,KAAKD,SAK/C,CAAA,CAAA,IAAA,SApEgBC,MAAAA,SAAAA,EAAKD,GACV,OAAA,KAAKQ,SAAS,SAAUP,EAAKD,KAmExC,CAAA,IAAA,MAhEaC,MAAAA,SAAAA,EAAKD,GACP,OAAA,KAAKQ,SAAS,MAAOP,EAAKD,KA+DrC,CAAA,IAAA,QA5DeC,MAAAA,SAAAA,EAAKD,GACT,OAAA,KAAKQ,SAAS,QAASP,EAAKD,KA2DvC,CAAA,IAAA,OAxDcC,MAAAA,SAAAA,EAAKD,GACR,OAAA,KAAKQ,SAAS,OAAQP,EAAKD,KAuDtC,CAAA,IAAA,MApDaC,MAAAA,SAAAA,EAAKD,GACP,OAAA,KAAKQ,SAAS,MAAOP,EAAKD,KAmDrC,CAAA,IAAA,WA/CkBS,MAAAA,SAAAA,EAAQR,EAAKD,GACrBU,IAAAA,EAAM,IAAIC,eAMT,OAJPD,EAAIE,KAAKH,EAAQR,GAEjBS,EAAIG,KAAKb,GAEF,IAAIc,QAAQ,SAACC,EAASC,GAC3BN,EAAIO,mBAAqB,WACnBP,GAAmB,IAAnBA,EAAIQ,WAAkB,CAClBC,IAAAA,EAAST,EAAIS,OAEfA,GAAU,KAAOA,EAAS,KAC5BJ,EAAQ,CAAEK,QAASV,EAAIW,aAAcF,OAAAA,IAGnCA,GAAU,KAAOA,EAAS,KAC5BH,EAAO,CAAEI,QAASV,EAAIW,aAAcF,OAAQA,YA8BxD,EAAA,GAAA,QAAA,QAAA;;AC7EA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,QAAA","file":"request.js","sourceRoot":"../src/js","sourcesContent":["// Classes:\nclass Request {\n  \n  // Constructor:\n  constructor(data) {\n    this.data = data.data\n    this.url = data.url\n  }\n\n  // Static functions:\n  static delete(url, data) {\n    return this._request('DELETE', url, data)\n  }\n\n  static get(url, data) {\n    return this._request('GET', url, data)\n  }\n\n  static patch(url, data) {\n    return this._request('PATCH', url, data)\n  }\n\n  static post(url, data) {\n    return this._request('POST', url, data)\n  }\n\n  static put(url, data) {\n    return this._request('PUT', url, data)\n  }\n\n  // Static private functions:\n  static _request(method, url, data) {\n    const xhr = new XMLHttpRequest()\n\n    xhr.open(method, url)\n\n    xhr.send(data)\n\n    return new Promise((resolve, reject) => {\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          const status = xhr.status\n          \n          if (status >= 100 && status < 400) {\n            resolve({ payload: xhr.responseText, status })\n          }\n          \n          if (status >= 400 && status < 600) {\n            reject({ payload: xhr.responseText, status: status })\n          }\n        }\n      }\n    })\n  } \n\n  // Functions:\n  delete() {\n    return this.constructor.delete(this.url, this.data)\n  }\n  \n  get() {\n    return this.constructor.get(this.url, this.data)\n  }\n\n  patch() {\n    return this.constructor.patch(this.url, this.data)\n  }\n\n  post() {\n    return this.constructor.post(this.url, this.data)\n  }\n\n  put() {\n    return this.constructor.put(this.url, this.data)\n  }\n  \n}\n\n// Exports:\nexport { Request }","// Exports:\nexport { Request } from './request'"]}